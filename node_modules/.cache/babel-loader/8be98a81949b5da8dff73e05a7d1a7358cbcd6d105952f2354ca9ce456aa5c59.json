{"ast":null,"code":"/*!\n * @gsap/react 2.1.1\n * https://gsap.com\n *\n * Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\nimport { useEffect, useLayoutEffect, useRef } from \"react\";\nimport gsap from \"gsap\";\nlet useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect,\n  isConfig = value => value && !Array.isArray(value) && typeof value === \"object\",\n  emptyArray = [],\n  defaultConfig = {},\n  _gsap = gsap; // accommodates situations where different versions of GSAP may be loaded, so a user can gsap.registerPlugin(useGSAP);\n\nexport const useGSAP = function (callback) {\n  let dependencies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyArray;\n  let config = defaultConfig;\n  if (isConfig(callback)) {\n    config = callback;\n    callback = null;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  } else if (isConfig(dependencies)) {\n    config = dependencies;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  }\n  callback && typeof callback !== \"function\" && console.warn(\"First parameter must be a function or config object\");\n  const {\n      scope,\n      revertOnUpdate\n    } = config,\n    mounted = useRef(false),\n    context = useRef(_gsap.context(() => {}, scope)),\n    contextSafe = useRef(func => context.current.add(null, func)),\n    deferCleanup = dependencies && dependencies.length && !revertOnUpdate;\n  useIsomorphicLayoutEffect(() => {\n    callback && context.current.add(callback, scope);\n    if (!deferCleanup || !mounted.current) {\n      // React renders bottom-up, thus there could be hooks with dependencies that run BEFORE the component mounts, thus cleanup wouldn't occur since a hook with an empty dependency Array would only run once the component mounts.\n      return () => context.current.revert();\n    }\n  }, dependencies);\n  deferCleanup && useIsomorphicLayoutEffect(() => {\n    mounted.current = true;\n    return () => context.current.revert();\n  }, emptyArray);\n  return {\n    context: context.current,\n    contextSafe: contextSafe.current\n  };\n};\nuseGSAP.register = core => {\n  _gsap = core;\n};\nuseGSAP.headless = true; // doesn't require the window to be registered.","map":{"version":3,"names":["useEffect","useLayoutEffect","useRef","gsap","useIsomorphicLayoutEffect","window","isConfig","value","Array","isArray","emptyArray","defaultConfig","_gsap","useGSAP","callback","dependencies","arguments","length","undefined","config","console","warn","scope","revertOnUpdate","mounted","context","contextSafe","func","current","add","deferCleanup","revert","register","core","headless"],"sources":["C:/Users/lucsa/OneDrive/Documentos/RepositÃ³rios/Websites/Portfolio/marknow/node_modules/@gsap/react/src/index.js"],"sourcesContent":["/*!\n * @gsap/react 2.1.1\n * https://gsap.com\n *\n * Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\nimport { useEffect, useLayoutEffect, useRef } from \"react\";\nimport gsap from \"gsap\";\n\nlet useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect,\n    isConfig = value => value && !Array.isArray(value) && typeof(value) === \"object\",\n    emptyArray = [],\n    defaultConfig = {},\n    _gsap = gsap; // accommodates situations where different versions of GSAP may be loaded, so a user can gsap.registerPlugin(useGSAP);\n\nexport const useGSAP = (callback, dependencies = emptyArray) => {\n  let config = defaultConfig;\n  if (isConfig(callback)) {\n    config = callback;\n    callback = null;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  } else if (isConfig(dependencies)) {\n    config = dependencies;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  }\n  (callback && typeof callback !== \"function\") && console.warn(\"First parameter must be a function or config object\");\n  const { scope, revertOnUpdate } = config,\n        mounted = useRef(false),\n        context = useRef(_gsap.context(() => { }, scope)),\n        contextSafe = useRef((func) => context.current.add(null, func)),\n        deferCleanup = dependencies && dependencies.length && !revertOnUpdate;\n  useIsomorphicLayoutEffect(() => {\n    callback && context.current.add(callback, scope);\n    if (!deferCleanup || !mounted.current) { // React renders bottom-up, thus there could be hooks with dependencies that run BEFORE the component mounts, thus cleanup wouldn't occur since a hook with an empty dependency Array would only run once the component mounts.\n      return () => context.current.revert();\n    }\n  }, dependencies);\n  deferCleanup && useIsomorphicLayoutEffect(() => {\n      mounted.current = true;\n      return () => context.current.revert();\n    }, emptyArray);\n  return { context: context.current, contextSafe: contextSafe.current };\n};\nuseGSAP.register = core => { _gsap = core; };\nuseGSAP.headless = true; // doesn't require the window to be registered.\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,eAAe,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,MAAM;AAEvB,IAAIC,yBAAyB,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGJ,eAAe,GAAGD,SAAS;EACvFM,QAAQ,GAAGC,KAAK,IAAIA,KAAK,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAI,OAAOA,KAAM,KAAK,QAAQ;EAChFG,UAAU,GAAG,EAAE;EACfC,aAAa,GAAG,CAAC,CAAC;EAClBC,KAAK,GAAGT,IAAI,CAAC,CAAC;;AAElB,OAAO,MAAMU,OAAO,GAAG,SAAAA,CAACC,QAAQ,EAAgC;EAAA,IAA9BC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,UAAU;EACzD,IAAIS,MAAM,GAAGR,aAAa;EAC1B,IAAIL,QAAQ,CAACQ,QAAQ,CAAC,EAAE;IACtBK,MAAM,GAAGL,QAAQ;IACjBA,QAAQ,GAAG,IAAI;IACfC,YAAY,GAAG,cAAc,IAAII,MAAM,GAAGA,MAAM,CAACJ,YAAY,GAAGL,UAAU;EAC5E,CAAC,MAAM,IAAIJ,QAAQ,CAACS,YAAY,CAAC,EAAE;IACjCI,MAAM,GAAGJ,YAAY;IACrBA,YAAY,GAAG,cAAc,IAAII,MAAM,GAAGA,MAAM,CAACJ,YAAY,GAAGL,UAAU;EAC5E;EACCI,QAAQ,IAAI,OAAOA,QAAQ,KAAK,UAAU,IAAKM,OAAO,CAACC,IAAI,CAAC,qDAAqD,CAAC;EACnH,MAAM;MAAEC,KAAK;MAAEC;IAAe,CAAC,GAAGJ,MAAM;IAClCK,OAAO,GAAGtB,MAAM,CAAC,KAAK,CAAC;IACvBuB,OAAO,GAAGvB,MAAM,CAACU,KAAK,CAACa,OAAO,CAAC,MAAM,CAAE,CAAC,EAAEH,KAAK,CAAC,CAAC;IACjDI,WAAW,GAAGxB,MAAM,CAAEyB,IAAI,IAAKF,OAAO,CAACG,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEF,IAAI,CAAC,CAAC;IAC/DG,YAAY,GAAGf,YAAY,IAAIA,YAAY,CAACE,MAAM,IAAI,CAACM,cAAc;EAC3EnB,yBAAyB,CAAC,MAAM;IAC9BU,QAAQ,IAAIW,OAAO,CAACG,OAAO,CAACC,GAAG,CAACf,QAAQ,EAAEQ,KAAK,CAAC;IAChD,IAAI,CAACQ,YAAY,IAAI,CAACN,OAAO,CAACI,OAAO,EAAE;MAAE;MACvC,OAAO,MAAMH,OAAO,CAACG,OAAO,CAACG,MAAM,CAAC,CAAC;IACvC;EACF,CAAC,EAAEhB,YAAY,CAAC;EAChBe,YAAY,IAAI1B,yBAAyB,CAAC,MAAM;IAC5CoB,OAAO,CAACI,OAAO,GAAG,IAAI;IACtB,OAAO,MAAMH,OAAO,CAACG,OAAO,CAACG,MAAM,CAAC,CAAC;EACvC,CAAC,EAAErB,UAAU,CAAC;EAChB,OAAO;IAAEe,OAAO,EAAEA,OAAO,CAACG,OAAO;IAAEF,WAAW,EAAEA,WAAW,CAACE;EAAQ,CAAC;AACvE,CAAC;AACDf,OAAO,CAACmB,QAAQ,GAAGC,IAAI,IAAI;EAAErB,KAAK,GAAGqB,IAAI;AAAE,CAAC;AAC5CpB,OAAO,CAACqB,QAAQ,GAAG,IAAI,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}